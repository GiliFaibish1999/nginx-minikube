name: CD
on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: nginx-app
  REGISTRY: localhost:5000  # Fake registry inside Minikube

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Minikube
        uses: medyagh/setup-minikube@latest
        with:
          driver: docker
          kubernetes-version: v1.27.0
          addons: registry,ingress  # Enable built-in Minikube registry

      - name: Build Docker Image
        run: |
          eval $(minikube -p minikube docker-env)  # Ensure Minikube environment is used
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} ./nginx/
          minikube image load ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Push Image to Minikube Fake Registry
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Update `values.yaml` with New Image Tag
        run: |
          cd nginx-app
          sed -i 's|image.tag:.*|image.tag: '${{ github.sha }}'|' values.yaml 
          git config --global user.name 'devopshint'
          git config --global user.email 'devopshint@gmail.com'
          git add values.yaml
          git commit -m "Update values.yaml with new image tag"
          git push

      - name: Install Helm CLI
        uses: azure/setup-helm@v3
        with:
          version: latest

      - name: Deploy to Minikube using Helm
        run: |
          helm upgrade --install nginx-app ./nginx-app \
            --set image.repository=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} \
            --set image.tag=${{ github.sha }} \
            --wait

      - name: Verify Deployment
        run: |
          kubectl get pods
          kubectl get svc
